# Trabajo pr√°ctico N¬∫6 - Estructuras de datos complejas -  Varela Santiago Octavio (Comisi√≥n 22)

# Resoluci√≥n del trabajo pr√°ctico N¬∫6 al 2025-04-18

# Respuestas tambi√©n en https://github.com/santiagovOK/UTN-TUPaD-P1/tree/main/06DatosComplejos/VARELA_TP-06.ipynb

# ----------------------------------------------------------------------

# 1) Dado el diccionario precios_frutas 
# precios_frutas = {'Banana': 1200, 'Anan√°': 2500, 'Mel√≥n': 3000, 'Uva': 1450}

# A√±adir las siguientes frutas con sus respectivos precios:
# ‚óè‚Äã Naranja = 1200
# ‚óè‚Äã Manzana = 1500
# ‚óè‚Äã Pera = 2300

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 2) Siguiendo con el diccionario precios_frutas que resulta luego de ejecutar el c√≥digo desarrollado en el punto anterior, actualizar los precios de las siguientes frutas:
# ‚óè‚Äã Banana = 1330
# ‚óè‚Äã Manzana = 1700
# ‚óè‚Äã Mel√≥n = 2800

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 3) Siguiendo con el diccionario precios_frutas que resulta luego de ejecutar el c√≥digo desarrollado en el punto anterior, crear una lista que contenga √∫nicamente las frutas sin los precios.

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 4) Crear una clase llamada Persona que contenga un m√©todo __init__ con los atributos nombre, pais y edad y el m√©todo saludar. El m√©todo saludar debe imprimir por pantalla un mensaje de salud que siga la estructura "¬°Hola! Soy [nombre], vivo en [pais] y tengo [edad] a√±os."

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 5) Crear una clase llamada Circulo que contenga el atributo radio y los m√©todos calcular_area y calcular_perimetro. Dichos m√©todos deben calcular el par√°metro correspondiente. Ayuda: el m√≥dulo math puede ser de utilidad para usar la constante ùúã.

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 6) Dado un string con par√©ntesis "()", "{}", "[]", verifica si est√°n correctamente balanceados usando una pila. Ejemplo de entrada y salida: (ver en PDF)

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 7) Usa una cola para simular un sistema de turnos en un banco. La cola debe permitir:

# ‚óè‚Äã Agregar clientes (encolar).
# ‚óè‚Äã Atender clientes (desencolar).
# ‚óè‚Äã Mostrar el siguiente cliente en la fila.

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 8) Crea una lista enlazada que permita insertar nodos al inicio y recorrer la lista para mostrar los valores almacenados.

# ----------------------------------------------------------------------

# ----------------------------------------------------------------------

# 9) Dada una lista enlazada, implementa una funci√≥n para invertirla.Ejemplo de entrada y salida: (Ver en PDF)
